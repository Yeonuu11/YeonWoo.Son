배열
- 다수의 변수 선언을 용이하게 하기 위해 사용
- 하나의 선언을 통해 두개 이상의 변수 선언 가능
- 다수의 변수로는 할 수 없는 일이 배열로 가능
- 1차원~다차원 배열 존재


int oneDimArr[4];
int : 배열의 자료형
oneDimArr : 배열의 이름
[4] : 배열의 길이

oneDimArr[idx] = 10;
- 배열 oneDimArr의 (idx + 1) 번째에 10을 저장
[4]라고 되어 있어도 [0]부터 저장되기 때문.

배열 초기화
int arr1[5]={1,2,3,4,5};
int arr3[5]={1,2};
=>> {1,2,0,0,0}
부족한 부분은 0으로 채워진다.

int arr[]={1,2,3,4,5};
=>> int arr[5]={1,2,3,4,5};
배열 길이 생략 시 입력 원소의 개수만큼 자동적으로 정의된다.



char형 배열
- char형은 끝에 널 문자(\0)까지 포함된다. 널 문자는 문자열의 끝을 의미
- printf로 %s 를 출력하면, 널 문자가 나올때까지만 출력

**널 문자
- char a = '\0';
- char b = ' ';
printf("%d %d", a, b);
a는 아무것도 출력되지 않아서 0으로 나오고, b는 공백의 아스키코드 32가 나온다
- 널 문자가 있으면 문자열, 없으면 문자 배열
- 배열 크기를 1씩 증가해서 %c, str[i] 로 printf로 while str[i] != '\0'
널 문자가 나오기 전까지 한글자씩 출력 가능

- 문자열은 시작은 판단 가능하지만 끝이 판단 불가능하기 때문에 널 문자를 삽입하여 끝이 확인되어야 한다
- 문자열 출력 시 널 문자를 만날 때까지 출력 진행

- scanf함수는 공백을 기준으로 데이터의 수를 구분함 (입력 받을 때 스페이스로 구분)
- 공백을 포함하는 문자열을 한번의 scanf 호출로 못읽음