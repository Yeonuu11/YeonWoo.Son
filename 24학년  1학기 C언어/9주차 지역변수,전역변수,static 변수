지역변수의 성질
- 함수 내에 선언되는 변수
- 함수 내에서만 접근 가능
- 한 함수(지역) 내에 동일한 변수 X -> 다른 함수 내에 동일한 변수 선언 가능
- 해당 함수 빠져나가면 지역변수 소멸
- 외부에 선언된 동일한 이름의 변수를 가림
--->>>> 이렇게 코드 짜는건 안좋은 습관

for문 안에 설정된 것도 지역변수
- 이 지역변수는 for문 빠져나가면 소멸
- >> for문의 반복 횟수만큼 지역변수가 할당되고 소멸

main함수에서 num=1;을 선언하고, main함수 내부의 if함수에서 num=10;으로 선언하면
if함수 내에서는 num이 10이고, if 벗어나면 다시 1이 된다.
>>이렇게 안짜는게 좋음


매개변수의 성질
- 지역변수의 일종
- 선언된 함수 내에서만 접근 가능
- 함수 반환 시 소멸


전역변수의 성질
- 함수 외부에 선언됨
- 프로그램의 시작과 동시에 할당, 종료까지 존재
- 별도의 값으로 초기화 하지 않으면 0으로 초기화 (보통은 쓰레기값으로 초기화됨)
- 코드 전체 영억 어디서든 접근 가능
- 동일한 이름이 지역변수가 전역변수를 가린다
>>> 이런 식으로 코드 짜면 안됨 어찌됐든 동일한 이름의 변수는 ㄴㄴㄴ


전역변수의 단점!!!
- 많이 쓰면 안좋다
- 전역 변수의 변경은 전체 프로그램의 변경
- 전역변수에 의존하면 코드 변경 시 전체적으로 찾아야 함


static 변수
- 딱 1회 초기화되고 종료시까지 메모리에 존재 (전역변수의 특성)
- 선언된 함수 내에서만 접근가능 (지역변수의 특성)

for(i=0; i<3; i++)
  simpleFunc();

void simpleFunc(void)
{
  static int num1=0;
  int num2=0;
  num1++; num2++;
}

일 때, num2는 for문이 돌 때마다 계속 0으로 초기화되지만 static으로 선언된 num1은 처음에 0으로 초기화 되고 그걸로 끝
계속 ++이 된다